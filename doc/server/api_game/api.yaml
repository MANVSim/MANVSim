openapi: 3.0.1

info:
  title: MANVSim API
  description: The specification for the API the app uses to communicate with the server.
  version: 0.1.0

servers:
  - url: /api/v1

paths:

  /login:
    post:
      summary: TAN Login
      description: authenticates a user with a TAN and returns a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ TAN ]
              properties:
                TAN:
                  type: string
                  description: User TAN
                  example: "987ZYX"
      responses:
        '200':
          description: TAN valid
          content:
            application/json:
              schema:
                type: object
                required: [ jwt_token, user_creation_required, user_name, user_role ]
                properties:
                  jwt_token:
                    type: string
                    description: JWT-Token, maps game and player
                    example: "<JWT-Token>"
                  user_creation_required:
                    type: boolean
                    description: indicates if name for the TAN was already set.
                    example: false
                  user_name:
                    type: string
                    description: name for the TAN, if userCreationRequired is false. Otherwise empty.
                    example: "John Doe"
                  user_role:
                    type: string
                    description: role of the user.
                    example: "Notarzt"
        '400':
          description: Invalid TAN detected. Unable to resolve player.


  /player/set-name:
    post:
      summary: Set username for the TAN
      description: Sets the name for the TAN provided in JWT.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ name ]
              properties:
                name:
                  type: string
                  description: username to be set.
                  example: "John Doe"
                force_update:
                  type: boolean
                  description: An optional flag to indicate an overwrite.
      responses:
        '200':
          description: Name successfully set.
        '400':
          description: Invalid form detected. Unable to resolve attribute 'name'.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Name was already set and no force flag was found in the request.

      security:
        - bearerAuth: [ ]


  /scenario/start-time:
    get:
      summary: Get start time and arrival time of scenario.
      description: Get start time of scenario and time to arrive/travel at the scene.
      responses:
        '200':
          description: success.
          content:
            application/json:
              schema:
                type: object
                required: [ scenario_start_time ]
                properties:
                  scenario_start_time:
                    type: integer
                    description: Timestamp in ms since unix epoch.
                    example: 1672531200
                  arrival_time:
                    type: integer
                    description: Timestamp in seconds since unix epoch, indicating the time the player arrives. This parameter is only provided, if a player is alerted.
                    example: 1672531200
        '204':
          description: The execution has not been started yet.
        '400':
          description: Invalid execution id or TAN provided. Unable to resolve data.
        '401':
          $ref: '#/components/responses/Unauthorized'

      security:
        - bearerAuth: [ ]


  /run/patient/all-ids:
    get:
      summary: Returns a list of all patient ids.
      responses:
        '200':
          description: A JSON array of patient ids
          content:
            application/json:
              schema:
                type: object
                required: [ tans ]
                properties:
                  tans:
                    type: array
                    items:
                      type: integer
                    example: [ 1, 12, 42 ]

        '204':
          description: No running execution detected.
        '400':
          description: Invalid execution id or player TAN sent. Unable to resolve running instance/player. Occurs if an invalid JWT was sent.
      security:
        - bearerAuth: [ ]

  /run/patient/arrive:
    post:
      summary: Returns a specified patient.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ patient_id ]
              properties:
                patient_id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: A patient specified by patientId. Additionally the response contains updated current location of the player.
          content:
            application/json:
              schema:
                type: object
                required: [ patient ]
                properties:
                  player_location:
                    $ref: '#/components/schemas/LocationDTO'
                  patient:
                    $ref: '#/components/schemas/PatientDTO'
        '204':
          description: No running execution detected.
        '400':
          description: Missing or invalid request parameter detected.
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - bearerAuth: [ ]

  /run/patient/leave:
    post:
      summary: Leaves a patient.
      description: Closes a patient profile and leaves the patients location.
      responses:
        '200':
          description: success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Patient profile successfully closed."
        '204':
          description: No running execution detected.
        '400':
          description: Invalid JWT detected.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '405':
          description: Player is not assigned to any location.
        '409':
          description: Unable to access runtime object. A timeout-error occurred.
      security:
        - bearerAuth: [ ]


  /run/location/all:
    get:
      summary: Returns a list of  top-level accessible locations.
      responses:
        '200':
          description: A JSON array of locations
          content:
            application/json:
              schema:
                type: object
                required: [ locations ]
                properties:
                  locations:
                    type: array
                    items:
                      $ref: '#/components/schemas/LocationDTO'
        '204':
          description: No running execution detected.
        '400':
          description: Invalid JWT detected.
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - bearerAuth: [ ]

  /run/location/take-from:
    post:
      summary: A player 'takes' a sublocation, accessible to the players current location. It will be placed into the players inventory.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ take_location_id, from_location_id ]
              properties:
                take_location_id:
                  type: integer
                from_location_id:
                  type: integer
      responses:
        '200':
          description: accessible locations (the inventory) are updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  player_location:
                    $ref: '#/components/schemas/LocationDTO'
        '204':
          description: No running execution detected.
        '400':
          description: Missing or invalid request parameter detected.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: (Take-/From-) Location not found. Update your current location-access.
        '409':
          description: Unable to access runtime object. A timeout-error occurred.
      security:
        - bearerAuth: [ ]

  /run/location/leave:
    post:
      summary: Leaves a location.
      description: The current location of the player is resetted. Used initially to leave the arriving RTW.
      responses:
        '200':
          description: success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Player successfully left location."
        '204':
          description: No running execution detected.
        '400':
          description: Invalid JWT detected.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '405':
          description: Player is not assigned to any location.
        '409':
          description: Unable to access runtime object. A timeout-error occurred.
      security:
        - bearerAuth: [ ]

  /run/action/all:
    get:
      summary: Returns a list of actions available to the user.
      responses:
        '200':
          description: A JSON array of actions
          content:
            application/json:
              schema:
                type: object
                required: [ actions ]
                properties:
                  actions:
                    type: array
                    items:
                      $ref: '#/components/schemas/ActionDTO'
              example:
                - id: 1
                  name: Pflaster anbringen
                  duration_sec: 10000
                  resources_needed:
                    - Pflaster
                - id: 2
                  name: Klamotten aufschneiden
                  duration_sec: 4
                  resources_needed:
                    - Schere
                - id: 3
                  name: Schmerzmittel verabreichen
                  duration_sec: 20
                  resources_needed:
                    - Schmerzmittel
        '204':
          description: No running execution detected.
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - bearerAuth: [ ]

  /run/action/perform:
    post:
      summary: Tries to perform an action. If successful the action is enqueued on the patient until the result is requested.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ action_id, patient_id, resources ]
              properties:
                action_id:
                  type: integer
                  example: 1
                patient_id:
                  type: integer
                  example: 2
                resources:
                  type: array
                  description: Each quantity required, needs to be an id in the array. Saying resource 0 is required 3 times, then id '0' needs to occur three 3 times in the array.
                  items:
                    type: integer
                    example: 69
      responses:
        '200':
          description: The id of the resulting performed action.
          content:
            application/json:
              schema:
                type: object
                required: [ performed_action_id ]
                properties:
                  performed_action_id:
                    type: string
                    example: bc8856e4-ce8c-45d3-b20d-39b693d5a35e

        '204':
          description: No running execution detected.
        '400':
          description: Missing or invalid request parameter detected.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Resource not found. Update your current location-access.
        '409':
          description: Unable to access runtime object. A timeout-error occurred.
        '418':
          description: Invalid request. Patient has been moved.
      security:
        - bearerAuth: [ ]

  /run/action/perform/result:
    get:
      summary: Gets the result of a performed action and officially finishes/dequeues the action of the patient.
      parameters:
        - name: performed_action_id
          in: query
          required: true
          schema:
            type: string
        - name: patient_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The result of the performed action.
          content:
            application/json:
              schema:
                type: object
                required: [ conditions, patient ]
                properties:
                  conditions:
                    type: object
                    additionalProperties:
                      type: string
                  patient:
                    $ref: '#/components/schemas/PatientDTO'
        '204':
          description: No running execution detected.
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - bearerAuth: [ ]

  /run/action/perform/move/patient:
    post:
      summary: Moves a patient from the current location to another location. Returns the result of /patient/arrive or the errors of /location/leave
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ patient_id, new_location_id ]
              properties:
                patient_id:
                  type: integer
                  example: 2
                new_location_id:
                  type: integer
                  example: 2
      responses:
        '200':
          description: Returns the current player location and patient location.
        '204':
          description: No running execution detected.
        '400':
          description: Missing or invalid request parameter detected.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Unable to access runtime object. A timeout-error occurred.
        '418':
          description: Invalid request. Players is not allowed to move patient.
      security:
        - bearerAuth: [ ]

  /notifications:
    get:
      summary: notification polling
      description: Returns a list of notifications for the user after lastPollTime.
      parameters:
        - name: next_id
          in: query
          required: true
          schema:
            type: integer
            example: "2"
      responses:
        '200':
          description: success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      type: string
                      example: "I am a message"
                  next_id:
                    type: integer
                    example: 2
        '204':
          description: "No newer notifications available."
        '400':
          description: "Invalid request-query detected."
        '401':
          $ref: '#/components/responses/Unauthorized'
        '418':
          description: "Requested id larger than notifications available."
      security:
        - bearerAuth: [ ]



components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    PatientDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        location:
          $ref: '#/components/schemas/LocationDTO'
      required: [ id, name, location ]

    LocationDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceDTO'
        sub_locations:
          type: array
          items:
            $ref: '#/components/schemas/LocationDTO'
      required: [ id, name, resources, sub_locations ]

    ResourceDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        quantity:
          type: integer
      required: [ id, name, quantity ]

    ActionDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        duration_sec:
          type: integer
        resources_needed:
          type: array
          items:
            type: string
        picture_ref:
          type: string
      required: [ id, name, duration_sec, resources_needed ]

    Error:
      type: object
      properties:
        error:
          type: string
          example: "Unauthorized."

  responses:
    Unauthorized:
      description: Unauthorized.
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: "<Some message about Auth>"
